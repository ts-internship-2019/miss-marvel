@model iWasHere.Domain.Models.DictionaryCity

@{
    ViewData["Title"] = "AddEditCity";
}

<h1>AddEditCity</h1>

<h4>DictionaryCity</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddEditCity">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CityId" />
            <div class="form-group">
                <label asp-for="CityName" class="control-label"></label>
                <input asp-for="CityName" class="form-control" />
                <span asp-validation-for="CityName" class="text-danger"></span>
            </div>
            <div class="form-group">
                @(Html.Kendo().ComboBox()
         .Name("countiesCB")
         .Placeholder("Judet..")
         .DataTextField("CountyName")
         .DataValueField("CountyId")
         .HtmlAttributes(new { style = "width:100%;" })
         .Filter(FilterType.Contains)
         .AutoBind(false)
         .MinLength(3)
         .DataSource(source =>
         {
             source.Read(read =>
             {
                 read.Action("GetComboCounty", "Dictionary");
             })
             .ServerFiltering(true);
         })
                )
            </div>
            <div class="form-group">
                <label asp-for="CityCode" class="control-label"></label>
                <input asp-for="CityCode" class="form-control" />
                <span asp-validation-for="CityCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
