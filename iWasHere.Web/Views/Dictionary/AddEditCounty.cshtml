@model iWasHere.Domain.Models.DictionaryCounty

@{
    ViewData["Title"] = "Adauga Judet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add County</title>
</head>

<h4>County</h4>
@using (Html.BeginForm("AddCounty", "Dictionary", FormMethod.Post))
{
    <h5>Nume judet</h5>
    <input type="text" asp-for="CountyName" id="textBoxCountyName" />
    <h5>Cod judet</h5>
    <input type="text" asp-for="CountyCode" id="textBoxCountyCode" />

    <h4>Tara</h4>
    <div>
        <p>
            @(Html.Kendo().ComboBoxFor(model => model.CountryId)
              .DataValueField("CountryId")
              .DataTextField("CountryName")
              .Placeholder("Country")
              .MinLength(1)
              .Filter(FilterType.Contains)
              .Placeholder("Select a country!")
              //.Text(Model.Country.CountryName)
              .HtmlAttributes(new { style = "width:60%; id='countries'" })
          .Filter("StartsWith")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetComboCountry", "Dictionary");
              })
              .ServerFiltering(true);
          })
            )
        </p>
    </div>
    @Html.HiddenFor(a => a.CountyId)
<div>

    <button onclick="VerifyValues()" class="btn btn-primary" style="margin-top: 2em" name="submitButton" value="Save">Save</button>
    @if (Model == null)
    {
        <button onclick="VerifyValues(); return empty()" class="btn btn-primary" style="margin-top: 2em" name="submitButton" value="SaveAndNew">Save and New </button>
    }
    <input type="button" class="btn btn-primary" style="margin-top: 2em" name="cancelButton" value="Cancel/Back" onclick="return canceladd();" />
</div>

}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>

    function canceladd() {

            window.location.href = '@Url.Action("County", "Dictionary")';

    }

    function isEmpty(str) {
        return str === null || str.match(/^ *$/) !== null;
    }

    function hasLetters(str) {
        return str === null || str.match(/^[a-zA-Z]+$/) !== null;
    }

    function empty() {
            $(document).on('submit', 'form', function () {
        $.post('@Url.Content("/Dictionary/County")', function () { 
        }).done(function () {
                location.href = '@Url.Content("/Dictionary/AddEditCounty")';
        });

        });
        return true;
    }

    function VerifyValues() {
        if ( isEmpty($('#textBoxCountyName').val()) ) {

            alert("County name is mandatory!");
            return false;       
        }

        if ( isEmpty($('#textBoxCountyCode').val()) ) {

            alert("County code is mandatory!");
            return false; 
        }

        if (!/^[a-zA-Z]*$/g.test($('#textBoxCountyName').val())) {
    
            alert("Only letters are allowed in that field!");
            return false; 
        }

        if (!/^[a-zA-Z]*$/g.test($('#textBoxCountyCode').val())) {
            alert("Only letters allowed in that field!");
            return false; 
        }

        else return true;
    }

     function redirect() {

          location.href = '@Url.Content("/Dictionary/County")';
     };

</script>

