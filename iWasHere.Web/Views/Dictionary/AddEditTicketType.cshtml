@model iWasHere.Domain.Models.DictionaryTicketType

@{
    ViewData["Title"] = "AddEditTicketType";
}


@using (Html.BeginForm("Create", "TicketType", FormMethod.Post))
{
    <body onload="hideSaveNew()">
        <br />
        <h4>Add or edit a ticket type for team Marvel</h4>
        <hr />
        <div class="row">
            <div class="col-md-4">
                <form asp-action="AddEditTicketType">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="TicketTypeName" class="control-label"></label>
                        <input asp-for="TicketTypeName" id ="txtinput" class="form-control" onclick="clearSaveNew()" />
                        <span asp-validation-for="TicketTypeName" class="text-danger"></span>
                        <br />
                        <button type="submit" class="btn btn-success">Save</button>
                        <button type="submit" class="btn btn-success" id="saveNew">Save and new</button>
                    </div>
                    <div class="form-group">


                    </div>
                </form>
            </div>
        </div>

        <div>
            <button type="submit" class="btn btn-danger" onclick="cancel()">Cancel</button>
        </div>
    </body>

}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>


    function hideSaveNew() {
        var url = window.location.href
        if (url.indexOf("id") > -1) {
             document.getElementById("saveNew").style.display="none";
        }
    }

    function cancel() {
        window.location = '/Dictionary/TicketType';
        }

    //edit auto-change
    function clearSaveNew() {
        setTimeout(function() { document.getElementById('txtinput').val(null)}, 3)
    }
</script>

