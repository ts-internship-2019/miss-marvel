@model IEnumerable<iWasHere.Domain.Models.DictionaryCurrencyType>

    @{
    ViewData["Title"] = "Currency";
    }


  
    <h1 style="color:black; margin-top:20px;"><b style="font-family: 'Source Sans Pro, sans-serif';">Currency</b></h1>

    <body>
        <div class="display-field">
            <img src=@Url.Content("https://image.flaticon.com/icons/png/512/21/21066.png") alt="Currency Imag" width=100 height=100 />
        </div>

        <div style="margin-top:50px;" class="demo-section k-content">
            <div>

                <p>

                    @(Html.Kendo().TextBox()
                  .Name("custom")
                  .HtmlAttributes(new { style = "width: 30%", title = "custom", id = "txtFilter" }))

                    @(Html.Kendo().Button()
                            .Name("/*btnSubmit*/")
                            .HtmlAttributes(new { style = "background-color:rgb(40, 167, 69); color:white" })
                            .Icon("filter")
                            .Content("Filter")
                            .Events(ev => ev.Click("DisplayData")))

                    @(Html.Kendo().Button()
                        .Name("btnSubmit2")
                        .HtmlAttributes(new { style = "background-color:rgb(220, 53, 69); color:white" })
                        .Content("Clear Filter")
                        .Icon("filter-clear")
                        .Events(ev => ev.Click("delFilters")))

                    @(Html.Kendo().Button()
                           .Name("btnSubmit1")
                           .HtmlAttributes(new { style = "background-color:rgb(255, 153, 0); color:white", title = "custom", id = "ADD" })
                           .Icon("k-icon k-i-plus-circle")
                           .Content("Add Currency")
                           .Events(e => e.Click("OpenNewWindow")))

                </p>
            </div>
        </div>

        @(Html.Kendo().Grid<iWasHere.Domain.Models.DictionaryCurrencyType>()
        .Name("grid")
        .HtmlAttributes(new { style = "height: 500px", id = "grdCurrencyType" })
        .Columns(columns =>
        {
            columns.Bound(c => c.CurrencyTypeId).Hidden();
            columns.Bound(c => c.CurrencyCode).Width(280);
            columns.Bound(c => c.CurrencyName).Width(280);
            columns.Bound(c => c.CurrencyExRate).Width(280);
            columns.Template("<button class='btn btn-danger' id=btnDelete onclick=deleteCurrency(#=CurrencyTypeId#)>Delete</button>");
            columns.Command(c =>
                    {
                  c.Custom("EditRecord").Text("Edit").Click("EditCurrencyType").HtmlAttributes(new { style = "background-color:rgb(255, 153, 0); color:white" });
            });

        })

            .Scrollable()
            .Sortable()
            .Filterable()
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetCurrencies", "Dictionary").Data("myFunction"))
            .Update(update => update.Action("GetCurrencies", "Grid"))))

        <script>
            function onClick(e) {
                console.log(e.event);
                $(e.event.target).closest(".k-button").attr("id");
                console.log("apasat");

            }

        </script>


        <script>


       function deleteCurrency(id) {
             $.ajax({
                    type: 'DELETE',
                    url: '@Url.Action("DeleteCurrencyType", "Dictionary")',
                    data: { id: id },
                 success: function (response) {
                        $("#grdCurrencyType").data("kendoGrid").dataSource.read();
                 },
                        error: function (response) {

                        }
             })
       }


        function DisplayData() {
            $("#grdCurrencyType").data("kendoGrid").dataSource.read()

        }


        function EditCurrencyType(e) {
            grid = $("#grdCurrencyType").data("kendoGrid");

            var row = e.currentTarget.closest("tr").cells[0].outerText;
            var currencytypeID = e.currentTarget.closest("tr").cells[1].outerText;
            var currencyName = e.currentTarget.closest("tr").cells[2].outerText;
            var currencyCode = e.currentTarget.closest("tr").cells[3].outerText;

            window.location = '/Dictionary/AddEditCurrency?id=' + row + '&typeID=' + currencytypeID + '&name=' + currencyName + '&code=' + currencyCode;



        }

        function myFunction() {
            var filter = $("#txtFilter").val();
            var obj = {};
            obj["lFilter"] = filter;
            return obj;
        }

        function delFilters() {

                    $("#txtFilter").val(null);

                    $("#grdCurrencyType").data("kendoGrid").dataSource.read();
                    $("#grdCurrencyType").data("kendoGrid").dataSource.page(1);
        }

        function OpenNewWindow() {

                 location.href = '@Url.Content("/Dictionary/AddEditCurrency")';

        };


        </script>

     


    </body>