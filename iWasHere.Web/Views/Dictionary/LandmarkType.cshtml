@model IEnumerable<iWasHere.Domain.Models.DictionaryLandmarkType>

@{
    ViewData["Title"] = "Adauga Dictionar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>LandmarkType</title>
</head>
<body>
    <p>
        <a asp-action="AddEditLandmarkType">Create New</a>
    </p>
    <div class="row">
        <div class="col-5">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Item Name" aria-label="Recipient's username" aria-describedby="basic-addon2">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button">Filter</button>
            </div>
        </div>
        </div>
    </div>
    <div class="row">
        @(Html.Kendo().Button()
                        .Name("btnSubmit")
                        .HtmlAttributes(new { type = "button" })
                        .Content("Filter")
                        .Events(e => e.Click("DisplayData"))

        )
        @(Html.Kendo().TextBox()
            .Name("custom")
            .HtmlAttributes(new { style = "width: 100%", title = "custom", id="txtFilter" })
        )
    </div>
    @(Html.Kendo().Grid<iWasHere.Domain.Models.DictionaryLandmarkType>()
          .Name("grid")
          .HtmlAttributes(new { style = "height: 500px", id = "grdLandmarkType"  })
          .Columns(columns =>
            {
                columns.Bound(p => p.DictionaryItemId).Hidden();
                columns.Bound(p => p.DictionaryItemCode);
                columns.Bound(p => p.DictionaryItemName);
                columns.Bound(p => p.Description);
                columns.Command(c => {
                c.Custom("EditRecord").Text("Edit").Click("dgChange");
            });
            })
          .Scrollable()
          .Groupable()
          .Sortable()
          .Filterable()
          .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Read(read => read.Action("GetLandmarkType", "Dictionary").Data("myFunction"))
              .Update(update => update.Action("AddEditLandmarkType", "Grid"))  
          )
    )



</body>
<script>

    function DisplayData() {
       $("#grdLandmarkType").data("kendoGrid").dataSource.read()

       
    //$.ajax(
    //    {
    //        url: "/Dictionary/GetAjax",
    //        type: 'post',
    //        dataType: "json",
    //        data: { filter: input},
    //        success: function (result) {
    //            var dialog = $("#win").data("kendoWindow");
    //            $("#dataWin").html(result);
    //            dialog.open();
    //        }
    //    })
    }
    function dgChange(e) {
        grid = $("#grdLandmarkType").data("kendoGrid");
        var row = e.currentTarget.closest("tr").cells[0].outerText;
       
        
 
    }

    function myFunction() {
        var filter = $("#txtFilter").val();
        var obj = {};
        obj["lFilter"] = filter;
        return obj;
    }
</script>
</html>
