@model IEnumerable<iWasHere.Domain.Models.DictionaryTicketType>

@{
    ViewData["Title"] = "TicketType";
}

<h3>Categorii bilete disponibile</h3>

<body>
    <div class="filtrare">
        <p>
            @(Html.Kendo().TextBox()
                .Name("ktxtFilter")
                .HtmlAttributes(new { style = "width: 25%", title = "userInput", id = "txtFilter" })
            )

            @(Html.Kendo().Button()
                        .Name("btnFilter")
                        .Icon("filter")
                        .HtmlAttributes(new { type = "button" })
                        .Content("Filter data")
                        .Events(e => e.Click("DisplayData"))
                        .HtmlAttributes(new { style = "background-color:rgb(40, 167, 69); color:white" })

            )

            @(Html.Kendo().Button()
                   .Name("btnDeleteFilter")
                   .Tag("a")
                   .Icon("filter-clear")
                   .Content("Clear Filter")
                   .Events(e => e.Click("ClearFilter"))
                   .HtmlAttributes(new { style = "background-color:rgb(220, 53, 69); color:white" })
            )

            @(Html.Kendo().Button()
        .Name("iconButton")
        .Tag("em")
        .Icon("refresh")
        .Events(e => e.Click("DisplayData"))
        .Content("<span class='k-icon' title='Refresh'></span>"))

            @(Html.Kendo().Button()
              .Name("btnAdd")
              .Tag("a")
              .Icon("k-icon k-i-plus-circle")
              .Content("Add new ticket type")
              .Events(e => e.Click("ClearFilter"))
              .HtmlAttributes(new { style = "background-color:rgb(40, 167, 69); color:white " })
            )



            @*test ca mor*@


        </p>

        <p>
            <button type="button" class="k-button k-primary">Adauga</button>

        </p>
    </div>

    @(Html.Kendo().Grid<iWasHere.Domain.Models.DictionaryTicketType>
    ()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.TicketTypeName);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .HtmlAttributes(new { style = "height: 500px", id = "gridTicketType" })
    .Scrollable()
    .Sortable()
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Read(read => read.Action("TicketType_Read", "Dictionary").Data("filterFunction"))
    .Update(update => update.Action("EditingPopup_Update", "Grid"))
    .Destroy(update => update.Action("EditingPopup_Destroy", "Grid"))
    )
    )


</body>

<script type="text/javascript">

    function DisplayData() {
        $("#gridTicketType").data("kendoGrid").dataSource.read();
        $("#gridTicketType").data("kendoGrid").dataSource.page(1);
    }

    function filterFunction() {
        var filter = $("#txtFilter").val();
        var obj = {};
        obj["FilterTicketType"] = filter;
        return obj;
    }

    function ClearFilter() {
        $('#txtFilter').val(null);

        $('#gridTicketType').data("kendoGrid").dataSource.read();
        $('#gridTicketType').data("kendoGrid").dataSource.page(1);
    }





</script>
