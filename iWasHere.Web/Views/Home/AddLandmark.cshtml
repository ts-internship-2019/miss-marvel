@model iWasHere.Domain.DTOs.LandmarkModel

@{
    ViewData["Title"] = "Adauga Landmrk";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddLandmark</title>
</head>
<style>
    .map-container {
        position: absolute;
        bottom: 20%;
        right: 10%;
    }
</style>
<body>

    <h4>Landmark</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form enctype="multipart/form-data" asp-action="AddLandmark" id="addForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">

                    @if (Model != null && Model.LandmarkId != 0)
                    {
                        <input type="hidden" asp-for="LandmarkId" />
                    }
                    <label asp-for="LandmarkName" class="control-label"></label>
                    <input asp-for="LandmarkName" id="txtLandmarkName" class="form-control" />
                    <span asp-validation-for="LandmarkName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LandmarkDescription" class="control-label"></label>
                    <textarea rows="4" cols="50" maxlength="200" asp-for="LandmarkDescription" class="form-control"></textarea>
                    <span asp-validation-for="LandmarkDescription" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LandmarkCode" class="control-label"></label>
                    <input asp-for="LandmarkCode" id="txtLandmarkCode" class="form-control" />
                    <span asp-validation-for="LandmarkCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Landmark Type:</label>
                    @(Html.Kendo().ComboBoxFor(model => model.LandmarkTypeId)
                    .Placeholder("Landmark Type")
                    .DataTextField("DictionaryItemName")
                    .DataValueField("DictionaryItemId")
                    .HtmlAttributes(new { style = "width:100%;", id = "cboLandmarkType" })
                    .Filter(FilterType.Contains)
                    .AutoBind(false)
                    .Text(Model.LandmarkTypeName)
                    .MinLength(1)

                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetLandmarkType", "Home");
                        })
                        .ServerFiltering(true);
                    }))
                </div>
                <div class="form-group">
                    <label class="control-label">Landmark Period:</label>
                    @(Html.Kendo().ComboBoxFor(model => model.LandmarkPeriodId)
                    .Placeholder("Landmark Period")
                    .DataTextField("LandmarkPeriodName")
                    .DataValueField("LandmarkPeriodId")
                    .HtmlAttributes(new { style = "width:100%;", id = "cboLandmarkPeriod" })
                    .Filter(FilterType.Contains)
                    .AutoBind(false)
                    .MinLength(1)
                    .Text(Model.LandmarkPeriodName)
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetLandmarkPeriod", "Home");
                        })
                        .ServerFiltering(true);
                    }))
                </div>
                <div class="form-group">
                    <div class="form-group">
                        <label class="control-label">City:</label>
                        @(Html.Kendo().ComboBoxFor(model => model.CityId)
                        .Placeholder("City")
                        .DataTextField("CityName")
                        .DataValueField("CityId")
                        .HtmlAttributes(new { style = "width:100%;", id = "cboLandmarkCity" })
                        .Filter(FilterType.Contains)
                        .AutoBind(false)
                        .MinLength(1)
                        .Text(Model.CityName)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetCities", "Home");
                            })
                            .ServerFiltering(true);
                        }))
                    </div>
                </div>
                <div class="form-check-inline">
                    <label class="form-check-label">
                        <input type="radio" id="chkFree" onclick="hide()" form-check-input" name="optradio">Free
                    </label>
                </div>
                <div class="form-check-inline">
                    <label class="form-check-label">
                        <input type="radio" id="chkTax" onclick="show()" class="form-check-input" name="optradio">With taxes
                    </label>
                </div>
                <div id="taxes">
                    <div class="form-group">
                        <div class="form-group">
                            <label class="control-label">Currency:</label>
                            @(Html.Kendo().ComboBoxFor(model => model.CurrencyId)
                            .Placeholder("Currency")
                            .DataTextField("CurrencyName")
                            .DataValueField("CurrencyTypeId")
                            .HtmlAttributes(new { style = "width:100%;", id = "cboCurrency" })
                            .Filter(FilterType.Contains)
                            .AutoBind(false)
                            .MinLength(1)
                            .Text(Model.CurrencyName)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetCurrencyTypeCombo", "Home");
                                })
                                .ServerFiltering(true);
                            }))
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Student</label>
                        <input type="number" asp-for="StudentPrice" id="txtStudent" class="form-control" />
                        <span asp-validation-for="StudentPrice" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Adult</label>
                        <input type="number" asp-for="AdultPrice" id="txtAdult" class="form-control" />
                        <span asp-validation-for="AdultPrice" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Retired</label>
                        <input type="number" asp-for="RetiredPrice" id="txtRetired" class="form-control" />
                        <span asp-validation-for="RetiredPrice" class="text-danger"></span>
                    </div>

                </div>
                <div class="form-group">
                    <label class="control-label">Photo</label>
                    <div class="custom-file">
                        <input asp-for="Photos" class="form-control custom-file-input" multiple />
                        <label class="custom-file-label">Choose File...</label>
                    </div>
                </div>
                <div id="map-canvas" style="width:400px;height:400px"></div>
                <input asp-for="Latitude" type="hidden" id="latitude" />
                <input asp-for="Longitude" type="hidden" id="longitude" />
                <div class="form-group">
                    <a id="btnAddModify" onclick="saveLandmark()" class="btn btn-primary"> Add </a>
                </div>
            </form>
        </div>
    </div>

    
    @section Scripts{
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbRIxmMBjKw5IovRx6CF03hU8SDpqxtos&amp"></script>
        <script>
            $(document).ready(function () {
                var lat = marker.getPosition().lat();
                var lng = marker.getPosition().lng();
                $("#latitude").val(lat);
                $("#longitude").val(lng);
                $('.custom-file-input').on("change", function () {
                    var fileLabel = $(this).next('.custom-file-label');
                    var files = $(this)[0].files;
                    if (files.length > 1) {
                        fileLabel.html(files.length + ' files selected');

                    } else if (files.length) {
                        fileLabel.html(files[0].name);
                    }
                });
                
                var url_string = window.location.href;
                var url = new URL(url_string);

                var id = url.searchParams.get("id");
                if (id != 0 && id != null) {
                    document.getElementById("btnAddModify").innerText = "Update";
                }

                })
        
            function saveLandmark() {
           
            var txtCode = document.getElementById("txtLandmarkCode").value;
            var txtName = document.getElementById("txtLandmarkName").value;

            var cboLandmarkType = $("#cboLandmarkType").data("kendoComboBox").text();
            var cboLandmarkPeriod = $("#cboLandmarkPeriod").data("kendoComboBox").text();
            var cboLandmarkCity = $("#cboLandmarkCity").data("kendoComboBox").text();
            var cboCurrency = $("#cboCurrency").data("kendoComboBox").text();
                




            if (cboLandmarkType == "" || cboLandmarkType.length == 0 || cboLandmarkType == null) {
                alert("Please insert landmark type first");
                return;
             }

             if (cboLandmarkPeriod == "" || cboLandmarkPeriod.length == 0 || cboLandmarkPeriod == null) {
                alert("Please insert landmark period first");
                return;
                }
            if (cboLandmarkCity == "" || cboLandmarkCity.length == 0 || cboLandmarkCity == null) {
                alert("Please insert landmark city first");
                return;
            }
            if (cboCurrency == "" || cboCurrency.length == 0 || cboCurrency == null) {
                if ($("#taxes").is(":visible")) {
                    alert("Please insert currency!");
                    return;
                }
            }

            if (txtCode == "" || txtCode.length == 0 || txtCode == null || txtCode ==" ") {
                alert("Please insert landmark code first!!");
                return;
                }
                if (txtName == "" || txtName.length == 0 || txtName == null || txtName ==" ") {
                alert("Please insert landmark name first!!");
                return;
            }

            form = document.getElementById("addForm");
            form.submit();
        }

            function hide() {
                if ($('#chkFree').is(":checked"))
                    $('#taxes').hide();
                    $('#txtStudent').val(0);
                    $('#txtAdult').val(0);
                    $('#txtRetired').val(0);

            }

            function show() {
                if ($('#chkTax').is(":checked"))
                    $('#taxes').show();
            }
            var map = new google.maps.Map(document.getElementById('map-canvas'), {
                center: {
                    lat: 27.72,
                    lng: 85.36
                },
                zoom: 15

            });

            var marker = new google.maps.Marker({
                position: {
                    lat: 27.72,
                    lng: 85.36
                },
                map: map,
                draggable: true
            });

            google.maps.event.addListener(marker, 'dragend', function () {
                var lat = marker.getPosition().lat();
                var lng = marker.getPosition().lng();
                $("#latitude").val(lat);
                $("#longitude").val(lng);
            })
        </script>




    }
</body>
</html>
